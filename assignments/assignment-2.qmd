---
title: "Assignment 2"
---

![ **MOVIE: DUVARA KARŞI**](images/Head_On_17.jpg){fig-align="center" width="339"}

## IMDB DATA ANALYSIS

### Assignment Definition

This assignment aims to conduct a statistical analysis of Turkish movies listed on IMDb. During the data analysis process, data scraped from IMDb was processed, cleaned, and visualized. The goal is to evaluate the performance of the Turkish cinema industry on an international platform and analyze general trends.

### Objectives

-   Scraping data related to Turkish movies from IMDb.

-   Preparing the scraped data for analysis and visualization.

-   Examining the changes in IMDb ratings over the years.

-   Analyzing the relationship between IMDb vote counts and movie ratings.

-   Evaluating the position of Turkish movies in international rankings.

### Data Collection Process

The data was scraped from IMDb's official website using two different URLs. The criteria applied were as follows:

-   Movies with a minimum of 2,500 votes.

-   Productions originating from Turkey.

-   Separating movies released in 2010 and later from those released in 2009 and earlier.

#### IMDb URLs Used:

1.  **Movies from 2010 and later**\
    [Link to IMDb URL](https://www.imdb.com/search/title/?title_type=feature&countries=tr&count=250&num_votes=2500,&release_date=2010-01-01,2023-12-31)

2.  **Movies from 2009 and earlier**\
    [Link to IMDb URL](https://www.imdb.com/search/title/?title_type=feature&countries=tr&count=250&num_votes=2500,&release_date=,2009-12-31)

### CSS Selectors for IMDb Data Scraping

The following CSS selectors were used for extracting data from IMDb:

-   **Title:** `h3.ipc-title__text`

-   **Year:** `span.sc-300a8231-7.eaXxft.dli-title-metadata-item`

-   **Rating:** `span.ipc-rating-star--rating`

-   **Votes:** `span.ipc-rating-star--voteCount`

### Code for scraping

```{r}
# IMDb verilerini kazıma fonksiyonu
scrape_imdb_from_url <- function(url) {
  tryCatch({
    HEADERS <- c('User-Agent' = 'Mozilla/5.0 (iPad; CPU OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148')
    response <- GET(url, add_headers(.headers = HEADERS))
    if (http_status(response)$category != "Success") stop("HTTP isteği başarısız oldu.")

    page <- read_html(response)

    titles <- page %>%
      html_nodes('h3.ipc-title__text') %>%
      html_text(trim = TRUE)

    years <- page %>%
      html_nodes('span.sc-300a8231-7.eaXxft.dli-title-metadata-item') %>%
      html_text(trim = TRUE) %>%
      str_extract("\\d{4}") %>%
      as.numeric()

    ratings <- page %>%
      html_nodes('span.ipc-rating-star--rating') %>%
      html_text(trim = TRUE) %>%
      as.numeric()

    votes <- page %>%
      html_nodes('span.ipc-rating-star--voteCount') %>%
      html_text(trim = TRUE) %>%
      str_replace_all(",", "") %>%
      as.numeric()

    data_length <- min(length(titles), length(years), length(ratings), length(votes))
    tibble(
      Title = titles[1:data_length],
      Year = years[1:data_length],
      Rating = ratings[1:data_length],
      Votes = votes[1:data_length]
    )
  }, error = function(e) {
    message("Hata oluştu:", e$message)
    return(tibble())
  })
}

```

### Data Cleaning Process

Some deficiencies were identified in the data scraped from IMDb. Specifically, movies with missing year information were manually completed.

```{r, eval=FALSE}
imdb_data <- imdb_data %>%
  mutate(Year = case_when(
    Title == "Aftersun" ~ 2022,
    Title == "Skyfall" ~ 2012,
    Title == "Yedinci Koğustaki Mucize" ~ 2019,
    TRUE ~ Year
  ))

```

### 5. Data Analysis

#### 5.1. Top and Lowest-Rated Movies

#### **Top 5 Highest-Rated Movies:**

| Movie Title              | Year | Rating | Vote Count |
|--------------------------|------|--------|------------|
| Hababam Sınıfı           | 2004 | 9.2    | 44         |
| Uçurtmayı Vurmasınlar    | 1989 | 8.3    | 7          |
| Yedinci Koğustaki Mucize | 2019 | 8.2    | 58         |
| Ayla                     | 2023 | 8.2    | 45         |
| Dağ II                   | 2012 | 8.2    | 111        |

**Top 5 Lowest-Rated Movies:**

| Movie Title             | Year | Rating | Vote Count |
|-------------------------|------|--------|------------|
| İstanbul İçin Son Çağrı | 2023 | 5.3    | 9          |
| Baskın: Karabasan       | 2015 | 5.8    | 13         |
| Club Zero               | 2023 | 5.9    | 2          |
| Harem Suare             | 1999 | 6.1    | 3          |
| Taken 2                 | 2012 | 6.2    | 328        |

#### 5.2. IMDb Rating Changes Over the Years

To visualize the changes in IMDb ratings over the years, a scatter plot was created:

```{r, eval=FALSE}
scatter_plot <- ggplot(yearly_ratings, aes(x = Year, y = Average_Rating)) +
  geom_point(size = 2) +
  geom_line() +
  labs(title = "Average IMDb Ratings Over the Years",
       x = "Year",
       y = "Average IMDb Rating") +
  theme_minimal()

ggsave("~/Desktop/Melik/average_rating_by_year.png", scatter_plot)

```

**Result:** There appears to be a general upward trend in IMDb ratings over the years.

#### 5.3. Relationship Between IMDb Votes and Ratings

The correlation between IMDb vote counts and ratings was calculated as **0.04**, indicating a weak relationship between the two variables.

```{r, eval=FALSE}
correlation <- cor(imdb_data$Votes, imdb_data$Rating, use = "complete.obs")
print(paste("Correlation between vote count and IMDb rating:", correlation))

```

```{r, code-fold: true}

if (!requireNamespace("rvest", quietly = TRUE)) install.packages("rvest")
if (!requireNamespace("tibble", quietly = TRUE)) install.packages("tibble")
if (!requireNamespace("stringr", quietly = TRUE)) install.packages("stringr")
if (!requireNamespace("dplyr", quietly = TRUE)) install.packages("dplyr")
if (!requireNamespace("httr", quietly = TRUE)) install.packages("httr")
if (!requireNamespace("ggplot2", quietly = TRUE)) install.packages("ggplot2")

library(rvest)
library(tibble)
library(stringr)
library(dplyr)
library(httr)
library(ggplot2)


scrape_imdb_from_url <- function(url) {
  tryCatch({

    HEADERS <- c('User-Agent' = 'Mozilla/5.0 (iPad; CPU OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148')
    

    response <- GET(url, add_headers(.headers = HEADERS))
    if (http_status(response)$category != "Success") {
      stop(paste("HTTP isteği başarısız oldu:", http_status(response)$message))
    }
    

    page <- read_html(response)
    

    titles <- page %>%
      html_nodes('h3.ipc-title__text') %>%
      html_text(trim = TRUE)
    

    years <- page %>%
      html_nodes('span.sc-300a8231-7.eaXxft.dli-title-metadata-item') %>%
      html_text(trim = TRUE) %>%
      str_extract("\\d{4}") %>%
      as.numeric()
    

    ratings <- page %>%
      html_nodes('span.ipc-rating-star--rating') %>%
      html_text(trim = TRUE) %>%
      as.numeric()
    

    votes <- page %>%
      html_nodes('span.ipc-rating-star--voteCount') %>%
      html_text(trim = TRUE) %>%
      str_replace_all(",", "") %>%
      str_extract("\\d+") %>%
      as.numeric()
    

    data_length <- min(length(titles), length(years), length(ratings), length(votes))
    tibble(
      Title = titles[1:data_length],
      Year = years[1:data_length],
      Rating = ratings[1:data_length],
      Votes = votes[1:data_length]
    )
  }, error = function(e) {
    message(paste("Hata oluştu:", url, "-", e$message))
    return(tibble())
  })
}


urls <- c(
  "https://www.imdb.com/search/title/?title_type=feature&countries=tr&count=250&num_votes=2500,&release_date=2010-01-01,2023-12-31",
  "https://www.imdb.com/search/title/?title_type=feature&countries=tr&count=250&num_votes=2500,&release_date=,2009-12-31"
)


imdb_data <- bind_rows(lapply(urls, scrape_imdb_from_url))


imdb_data <- imdb_data %>%
  mutate(Year = case_when(
    Title == "2. Aftersun" ~ 2022,
    Title == "3. Skyfall" ~ 2012,
    Title == "5. Operation Fortune: Ruse de Guerre" ~ 2023,
    Title == "6. Kuru Otlar Üstüne" ~ 2023,
    Title == "8. Yedinci Kogustaki Mucize" ~ 2019,
    Title == "9. Cebimdeki Yabanci" ~ 2018,
    Title == "11. Abluka" ~ 2015,
    Title == "12. Kis Uykusu" ~ 2014,
    Title == "14. Club Zero" ~ 2023,
    Title == "15. Baskin" ~ 2015,
    Title == "17. Bir Zamanlar Anadolu'da" ~ 2011,
    Title == "18. Mustang" ~ 2015,
    Title == "20. Quo Vadis, Aida?" ~ 2020,
    Title == "21. Istanbul Için Son Çagri" ~ 2023,
    Title == "23. Ahlat Agaci" ~ 2018,
    Title == "24. Hundraåringen som klev ut genom fönstret och försvann" ~ 2013,
    Title == "2. The International" ~ 2009,
    Title == "3. Günesi Gördüm" ~ 2009,
    Title == "5. Babam ve Oglum" ~ 2005,
    Title == "6. G.O.R.A." ~ 2004,
    Title == "8. Barda" ~ 2007,
    Title == "9. Uzak" ~ 2002,
    Title == "11. Eskiya" ~ 1996,
    Title == "12. Masumiyet" ~ 1997,
    Title == "14. Issiz Adam" ~ 2008,
    Title == "15. Uçurtmayi Vurmasinlar" ~ 1989,
    Title == "17. Yol" ~ 1982,
    Title == "18. Harem Suare" ~ 1999,
    Title == "20. Vavien" ~ 2009,
    Title == "21. Kolpaçino" ~ 2009,
    Title == "23. Hamam" ~ 1997,
    Title == "24. Nefes" ~ 2009,
    TRUE ~ Year
  ))


if (!dir.exists("Users/Desktop/Melik")) {
  dir.create("Users/Desktop/Melik", recursive = TRUE)
}

if (any(is.na(imdb_data$Year))) {
  warning("Bazı kayıtların yıl bilgisi eksik. Manuel kontrol yapmayı unutmayın.")
}

# --- Verilerin Analizi ve Görselleştirme ---


top_5 <- imdb_data %>% arrange(desc(Rating)) %>% slice(1:5)
bottom_5 <- imdb_data %>% arrange(Rating) %>% slice(1:5)


yearly_ratings <- imdb_data %>%
  group_by(Year) %>%
  summarise(Average_Rating = mean(Rating, na.rm = TRUE),
            Movie_Count = n())


scatter_plot <- ggplot(yearly_ratings, aes(x = Year, y = Average_Rating)) +
  geom_point(size = 2) +
  geom_line() +
  labs(title = "Yıllara Göre IMDb Puanlarının Ortalaması",
       x = "Yıl",
       y = "Ortalama IMDb Puanı") +
  theme_minimal()


print(scatter_plot)


ggsave("Users/Desktop/Melik/average_rating_by_year.png", scatter_plot, width = 8, height = 6)


correlation <- cor(imdb_data$Votes, imdb_data$Rating, use = "complete.obs")


write.csv(top_5, "Users/Desktop/Melik/top_5_movies.csv", row.names = FALSE)
write.csv(bottom_5, "Users/Desktop/Melik/bottom_5_movies.csv", row.names = FALSE)

print("En yüksek puanlı 5 film kaydedildi: ~/Desktop/Melik/top_5_movies.csv")
print("En düşük puanlı 5 film kaydedildi: ~/Desktop/Melik/bottom_5_movies.csv")
print(paste("Oy sayısı ve IMDb puanı arasındaki korelasyon:", correlation))


```

### Insights

-   Turkish movies show a general upward trend in IMDb ratings over the years.

-   There is a weak relationship between vote count and IMDb ratings, suggesting that higher votes do not necessarily correlate with higher ratings.

-   The highest-rated movies are often older productions, indicating a strong audience preference for nostalgic films.

### 7. References

-   **IMDb Website:** [IMDb](https://www.imdb.com)

-   **R Libraries Used:** rvest, dplyr, ggplot2, httr.
