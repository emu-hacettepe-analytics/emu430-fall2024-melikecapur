install.packages("dslabs")
library(dslabs)
data("polls_us_election_2016")
library(dslabs)
data("polls_us_election_2016")
install.packages("dslabs")
library(dslabs)
data("polls_us_election_2016")
library(dslabs)
installed.packages()
install.packages("dslabs")
library(dslabs)
data("polls_us_election_2016")
head(polls_us_election_2016, 10)
total_na <- sum(is.na(polls_us_election_2016))
total_na
birth_year <- 2001
first_name <- "Melike"
polls_modified <- polls_us_election_2016
polls_modified[sapply(polls_modified, is.numeric)] <- lapply(polls_modified[sapply(polls_modified, is.numeric)],function(x) ifelse(is.na(x), birth_year, x))
polls_modified[sapply(polls_modified, is.character)] <- lapply(polls_modified[sapply(polls_modified, is.character)],function(x) ifelse(is.na(x), first_name, x))
head(polls_modified, 10)
remaining_na <- sum(is.na(polls_modified))
remaining_na
library(dslabs)
data("polls_us_election_2016")
head(polls_us_election_2016, 10)
total_na <- sum(is.na(polls_us_election_2016))
total_na
birth_year <- 2001
first_name <- "Melike"
polls_modified <- polls_us_election_2016
polls_modified[sapply(polls_modified, is.numeric)] <- lapply(polls_modified[sapply(polls_modified, is.numeric)],function(x) ifelse(is.na(x), birth_year, x))
polls_modified[sapply(polls_modified, is.character)] <- lapply(polls_modified[sapply(polls_modified, is.character)],function(x) ifelse(is.na(x), first_name, x))
head(polls_modified, 10)
remaining_na <- sum(is.na(polls_modified))
remaining_na
library(dslabs)
data("polls_us_election_2016")
head(polls_us_election_2016, 10)
total_na <- sum(is.na(polls_us_election_2016))
total_na
birth_year <- 2001
first_name <- "Melike"
polls_modified <- polls_us_election_2016
polls_modified[sapply(polls_modified, is.numeric)] <- lapply(polls_modified[sapply(polls_modified, is.numeric)],function(x) ifelse(is.na(x), 2001, x))
polls_modified[sapply(polls_modified, is.character)] <- lapply(polls_modified[sapply(polls_modified, is.character)],function(x) ifelse(is.na(x), Melike, x))
head(polls_modified, 10)
remaining_na <- sum(is.na(polls_modified))
remaining_na
original_na_count <- sum(is.na(polls_us_election_2016))
original_na_count
birth_year <- 2001
first_name <- "Melike"
polls_modified <- polls_us_election_2016
polls_modified[sapply(polls_modified, is.numeric)] <- lapply(polls_modified[sapply(polls_modified, is.numeric)],function(x) ifelse(is.na(x), 2001, x))
polls_modified[sapply(polls_modified, is.character)] <- lapply(polls_modified[sapply(polls_modified, is.character)],function(x) ifelse(is.na(x), Melike, x))
remaining_na <- sum(is.na(polls_modified))
remaining_na
na_counts <- sapply(polls_modified, function(x) sum(is.na(x)))
na_counts[na_counts > 0]
str(polls_modified)
na_counts <- sapply(polls_modified, function(x) sum(is.na(x)))
na_counts[na_counts > 0]
birth_year <- 2001
first_name <- "Melike"
polls_modified <- polls_us_election_2016
polls_modified[sapply(polls_modified, is.numeric)] <- lapply(polls_modified[sapply(polls_modified, is.numeric)],
function(x) ifelse(is.na(x), birth_year, x))
polls_modified[sapply(polls_modified, is.character)] <- lapply(polls_modified[sapply(polls_modified, is.character)],
function(x) ifelse(is.na(x), first_name, x))
remaining_na <- sum(is.na(polls_modified))
remaining_na
head(polls_us_election_2016, 10)
polls_modified = polls_us_election_2016.copy()
(        state   startdate     enddate  \
state  startdate    enddate                                                   pollster
state  startdate    enddate                                                   pollster
total_na_remaining <- sum(is.na(polls_modified))
total_na_remaining
data("polls_us_election_2016")
head(polls_us_election_2016, 10)
total_na <- sum(is.na(polls_us_election_2016))
cat("Total number of NA values in the dataset:", total_na, "\n")
birth_year <- 2001
first_name <- "Melike"
polls_us_election_2016_cleaned <- polls_us_election_2016
polls_us_election_2016_cleaned[] <- lapply(polls_us_election_2016_cleaned, function(column) {if(is.numeric(column)) {column[is.na(column)] <- birth_year} else if(is.character(column) || is.factor(column)) {column[is.na(column)] <- first_name}return(column)})
polls_us_election_2016_cleaned[] <- lapply(polls_us_election_2016_cleaned, function(column) {
if(is.numeric(column)) {
column[is.na(column)] <- birth_year
} else if(is.character(column) || is.factor(column)) {
column[is.na(column)] <- first_name
}
return(column)
})
head(polls_us_election_2016_cleaned, 10)
remaining_na <- sum(is.na(polls_us_election_2016_cleaned))
cat("Total number of NA values remaining in the cleaned dataset:", remaining_na, "\n")
cleaned_data <- polls_us_election_2016_cleaned
library(dslabs)
data("polls_us_election_2016")
head(polls_us_election_2016, 10)
total_na <- sum(is.na(polls_us_election_2016))
cat("Total number of NA values in the dataset:", total_na, "\n")
birth_year <- 2001
first_name <- "Melike"
polls_us_election_2016_cleaned <- polls_us_election_2016
polls_us_election_2016_cleaned[] <- lapply(polls_us_election_2016_cleaned, function(column) {if(is.numeric(column)) {column[is.na(column)] <- 2001} else if(is.character(column) || is.factor(column)) {column[is.na(column)] <- Melike}return(column)})
polls_us_election_2016_cleaned[] <- lapply(polls_us_election_2016_cleaned, function(column) {if (is.numeric(column)) {column[is.na(column)] <- 2001 # Replace with your birth year} else if (is.character(column) || is.factor(column)) {column[is.na(column)] <- "Melike" # Replace with your first name}return(column)})
head(polls_us_election_2016_cleaned, 10)
remaining_na <- sum(is.na(polls_us_election_2016_cleaned))
cat("Total number of NA values remaining in the cleaned dataset:", remaining_na, "\n")
cleaned_data <- polls_us_election_2016_cleaned
sum(is.na(polls_us_election_2016))
library(dslabs)
data("polls_us_election_2016")
head(polls_us_election_2016, 10)
total_na <- sum(is.na(polls_us_election_2016))
cat("Total number of NA values in the dataset:", total_na, "\n")
birth_year <- 2001
first_name <- "MELIKE"
polls_us_election_2016_cleaned <- polls_us_election_2016
polls_us_election_2016_cleaned[] <- lapply(polls_us_election_2016_cleaned, function(column) {if (is.numeric(column)) {column[is.na(column)] <- 2001 # Replace with your birth year} else if (is.character(column) || is.factor(column)) {column[is.na(column)] <- "MELIKE" # Replace with your first name}return(column)})
head(polls_us_election_2016_cleaned, 10)
remaining_na <- sum(is.na(polls_us_election_2016_cleaned))
cat("Total number of NA values remaining in the cleaned dataset:", remaining_na, "\n")
sum(is.na(polls_us_election_2016))
# Install and load necessary package
install.packages("dslabs")
library(dslabs)
# Import the dataset
data("polls_us_election_2016")
# Display the first 10 rows of the data set
head(polls_us_election_2016, 10)
# Calculate and display the total number of NA values in the entire dataset
total_na <- sum(is.na(polls_us_election_2016))
cat("Total number of NA values in the dataset:", total_na, "\n")
# Replace NA values:
# For numeric columns, replace NA with birth year
# For character/factor columns, replace NA with first name
birth_year <- 2001  # Replace with your birth year
first_name <- "Melike"  # Replace with your first name
polls_us_election_2016_cleaned <- polls_us_election_2016
polls_us_election_2016_cleaned[] <- lapply(polls_us_election_2016_cleaned, function(column) {
if (is.numeric(column)) {
column[is.na(column)] <- birth_year
} else if (is.character(column) || is.factor(column)) {
column[is.na(column)] <- first_name
}
return(column)
})
# Print the first 10 rows of the new data frame
head(polls_us_election_2016_cleaned, 10)
# Calculate the total number of NAs remaining in the new dataset
remaining_na <- sum(is.na(polls_us_election_2016_cleaned))
cat("Total number of NA values remaining in the cleaned dataset:", remaining_na, "\n")
# Gerekli kütüphaneyi yükle
library(dslabs)
# Veri setini yükle
data("polls_us_election_2016")
# İlk 10 satırı görüntüle
head(polls_us_election_2016, 10)
# Toplam NA sayısını hesapla
total_na <- sum(is.na(polls_us_election_2016))
total_na
# Doğum yılı ve ad bilgisi
birth_year <- 2001
first_name <- "Melike"
# Veri setini kopyala
polls_modified <- polls_us_election_2016
# Sayısal sütunlardaki NA değerlerini doğum yılı ile değiştir
polls_modified[sapply(polls_modified, is.numeric)] <- lapply(polls_modified[sapply(polls_modified, is.numeric)],
function(x) ifelse(is.na(x), birth_year, x))
# Karakter veya faktör sütunlardaki NA değerlerini adınızla değiştir
polls_modified[sapply(polls_modified, is.character)] <- lapply(polls_modified[sapply(polls_modified, is.character)],
function(x) ifelse(is.na(x), first_name, x))
# Yeni veri çerçevesinin ilk 10 satırı
head(polls_modified, 10)
# Kalan NA sayısını hesapla
total_na_remaining <- sum(is.na(polls_modified))
total_na_remaining
# Doğum yılı ve ad bilgisi
birth_year <- 2001
first_name <- "Melike"
# Veri setini kopyala
polls_modified <- polls_us_election_2016
# Sayısal sütunlardaki NA değerlerini doğum yılı ile değiştir
polls_modified[sapply(polls_modified, is.numeric)] <- lapply(polls_modified[sapply(polls_modified, is.numeric)],
function(x) ifelse(is.na(x), birth_year, x))
# Karakter veya faktör sütunlardaki NA değerlerini adınızla değiştir
polls_modified[sapply(polls_modified, is.character)] <- lapply(polls_modified[sapply(polls_modified, is.character)],
function(x) ifelse(is.na(x), first_name, x))
# Yeni veri çerçevesinin ilk 10 satırı
head(polls_modified, 10)
# Kalan NA sayısını hesapla
total_na_remaining <- sum(is.na(polls_modified))
total_na_remaining
library(dslabs)
data("polls_us_election_2016")
head(polls_us_election_2016, 10)
total_na <- sum(is.na(polls_us_election_2016))
cat("Total number of NA values in the dataset:", total_na, "\n")
polls_us_election_2016 = pd.DataFrame(data)
total_na_before = polls_us_election_2016.isna().sum().sum()
birth_year = 2001
first_name = "Melike"
modified_poll_data = polls_us_election_2016.copy()
for column in modified_poll_data.columns:
irst_10_rows = modified_poll_data.head(10)
first_10_rows = modified_poll_data.head(10)
remaining_na = modified_poll_data.isna().sum().sum()
for column in modified_poll_data.columns:
tools.display_dataframe_to_user(name="Modified Poll Data with Melike and 2001", dataframe=modified_poll_data)
first_10_rows, remaining_na_count
